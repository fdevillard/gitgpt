name: Auto Resolve Issues

on:
  issues:
    types:
      - opened
      - edited

jobs:
  resolve_issue:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: cicd

    steps:
    - name: Check author is known
      uses: actions/github-script@v7
      with:
        result-encoding: string
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const issue = context.issue;
          const author = issue.user.login;
          if (author !== "fdevillard") {
            core.setFailed('Author is not the author.');
          }
          
          return "Author is the author.";
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: 3.12

    - name: Install poetry
      uses: abatilo/actions-poetry@v3

    - name: Setup a local virtual environment (if no poetry.toml file)
      run: |
        poetry config virtualenvs.create true --local
        poetry config virtualenvs.in-project true --local

    - uses: actions/cache@v4
      name: Define a cache for the virtual environment based on the dependencies lock file
      with:
        path: ./.venv
        key: venv-cicd-${{ hashFiles('poetry.lock') }}

    - name: Install the project dependencies
      run: poetry install

    - name: Run resolve_issue script
      run: poetry run python cicd/resolve_issue.py

    - name: Create Pull Request
      run: poetry run python cicd/create_pull_request.py
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
